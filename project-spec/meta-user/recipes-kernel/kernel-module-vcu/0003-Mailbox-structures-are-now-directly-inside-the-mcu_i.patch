From d288a8777d154dcc8c0e6db0f5b2d8893f9fa8af Mon Sep 17 00:00:00 2001
From: Kevin Grandemange <kevin.grandemange@allegrodvt.com>
Date: Mon, 15 Oct 2018 10:23:36 +0200
Subject: [PATCH 3/4] Mailbox structures are now directly inside the
 mcu_interface structure instead of being pointers

Signed-off-by: Kevin Grandemange <kevin.grandemange@allegrodvt.com>
---
 common/mcu_interface.c          | 22 +++++-----------------
 include/mcu_interface_private.h |  4 ++--
 2 files changed, 7 insertions(+), 19 deletions(-)

diff --git a/common/mcu_interface.c b/common/mcu_interface.c
index 5c5d2f4..5275041 100644
--- a/common/mcu_interface.c
+++ b/common/mcu_interface.c
@@ -32,19 +32,9 @@ int al5_mcu_interface_create(struct mcu_mailbox_interface **mcu,
 	if (!*mcu)
 		return -ENOMEM;
 
-	(*mcu)->mcu_to_cpu = devm_kmalloc(device, sizeof(struct mailbox),
-					  GFP_KERNEL);
-	if (!(*mcu)->mcu_to_cpu)
-		return -ENOMEM;
-
-	(*mcu)->cpu_to_mcu = devm_kmalloc(device, sizeof(struct mailbox),
-					  GFP_KERNEL);
-	if (!(*mcu)->cpu_to_mcu)
-		return -ENOMEM;
-
-	al5_mailbox_init((*mcu)->cpu_to_mcu, (void *)config->cmd_base,
+	al5_mailbox_init(&(*mcu)->cpu_to_mcu, (void *)config->cmd_base,
 			 config->cmd_size);
-	al5_mailbox_init((*mcu)->mcu_to_cpu, (void *)config->status_base,
+	al5_mailbox_init(&(*mcu)->mcu_to_cpu, (void *)config->status_base,
 			 config->status_size);
 	spin_lock_init(&(*mcu)->read_lock);
 	spin_lock_init(&(*mcu)->write_lock);
@@ -58,8 +48,6 @@ EXPORT_SYMBOL_GPL(al5_mcu_interface_create);
 void al5_mcu_interface_destroy(struct mcu_mailbox_interface *mcu,
 			       struct device *device)
 {
-	devm_kfree(device, mcu->mcu_to_cpu);
-	devm_kfree(device, mcu->cpu_to_mcu);
 	devm_kfree(device, mcu);
 }
 EXPORT_SYMBOL_GPL(al5_mcu_interface_destroy);
@@ -71,7 +59,7 @@ int al5_mcu_send(struct mcu_mailbox_interface *mcu, struct al5_mail *mail)
 	int error;
 
 	spin_lock(&mcu->write_lock);
-	error = al5_mailbox_write(mcu->cpu_to_mcu, mail);
+	error = al5_mailbox_write(&mcu->cpu_to_mcu, mail);
 	spin_unlock(&mcu->write_lock);
 
 	if (error)
@@ -91,7 +79,7 @@ struct al5_mail *al5_mcu_recv(struct mcu_mailbox_interface *mcu)
 		return NULL;
 
 	spin_lock(&mcu->read_lock);
-	if (!al5_mailbox_read(mcu->mcu_to_cpu, mail, mail_size)) {
+	if (!al5_mailbox_read(&mcu->mcu_to_cpu, mail, mail_size)) {
 		dev_err(mcu->dev,
 			"BUG: mcu sent a message bigger than the maximum size.");
 		kfree(mail);
@@ -106,7 +94,7 @@ EXPORT_SYMBOL_GPL(al5_mcu_recv);
 
 int al5_mcu_is_empty(struct mcu_mailbox_interface *mcu)
 {
-	struct mailbox *mailbox = mcu->mcu_to_cpu;
+	struct mailbox *mailbox = &mcu->mcu_to_cpu;
 	u32 head_value;
 	u32 tail_value;
 
diff --git a/include/mcu_interface_private.h b/include/mcu_interface_private.h
index 85b4682..88f1a39 100644
--- a/include/mcu_interface_private.h
+++ b/include/mcu_interface_private.h
@@ -22,8 +22,8 @@
 #include "mcu_interface.h"
 
 struct mcu_mailbox_interface {
-	struct mailbox *mcu_to_cpu;
-	struct mailbox *cpu_to_mcu;
+	struct mailbox mcu_to_cpu;
+	struct mailbox cpu_to_mcu;
 	spinlock_t read_lock;
 	spinlock_t write_lock;
 	void *interrupt_register;
-- 
2.7.4

